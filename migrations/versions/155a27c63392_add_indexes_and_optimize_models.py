"""Add indexes and optimize models

Revision ID: 155a27c63392
Revises: 73f95bb25112
Create Date: 2025-03-07 10:26:02.846671

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '155a27c63392'
down_revision = '73f95bb25112'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('books',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('is_available', sa.Boolean(), nullable=True),
    sa.Column('author', sa.String(length=100), nullable=True),
    sa.Column('category1', sa.String(length=50), nullable=True),
    sa.Column('category2', sa.String(length=50), nullable=True),
    sa.Column('keywords', sa.String(length=200), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('borrower_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['borrower_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('books', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_books_author'), ['author'], unique=False)
        batch_op.create_index(batch_op.f('ix_books_category1'), ['category1'], unique=False)
        batch_op.create_index(batch_op.f('ix_books_is_available'), ['is_available'], unique=False)
        batch_op.create_index(batch_op.f('ix_books_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_books_title'), ['title'], unique=False)

    op.create_table('operation_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('target', sa.String(length=50), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(length=50), nullable=True),
    sa.Column('additional_data', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('loan_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('book_title', sa.String(length=200), nullable=False),
    sa.Column('borrower_id', sa.Integer(), nullable=False),
    sa.Column('loan_date', sa.DateTime(), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('return_date', sa.DateTime(), nullable=True),
    sa.Column('reminder_sent', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ),
    sa.ForeignKeyConstraint(['borrower_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('loan_history', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_loan_history_book_id'), ['book_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_loan_history_borrower_id'), ['borrower_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_loan_history_due_date'), ['due_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_loan_history_loan_date'), ['loan_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_loan_history_return_date'), ['return_date'], unique=False)

    op.create_table('reservations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('reservation_date', sa.DateTime(), nullable=True),
    sa.Column('notification_sent', sa.Boolean(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reservations')
    with op.batch_alter_table('loan_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_loan_history_return_date'))
        batch_op.drop_index(batch_op.f('ix_loan_history_loan_date'))
        batch_op.drop_index(batch_op.f('ix_loan_history_due_date'))
        batch_op.drop_index(batch_op.f('ix_loan_history_borrower_id'))
        batch_op.drop_index(batch_op.f('ix_loan_history_book_id'))

    op.drop_table('loan_history')
    op.drop_table('operation_logs')
    with op.batch_alter_table('books', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_books_title'))
        batch_op.drop_index(batch_op.f('ix_books_status'))
        batch_op.drop_index(batch_op.f('ix_books_is_available'))
        batch_op.drop_index(batch_op.f('ix_books_category1'))
        batch_op.drop_index(batch_op.f('ix_books_author'))

    op.drop_table('books')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    # ### end Alembic commands ###
